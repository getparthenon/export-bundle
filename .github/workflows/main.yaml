name: PHP test

on:
  push:
  pull_request:
  repository_dispatch:
      types: [ push ]


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.1', '8.2']
        composer-flags: ['', '--prefer-lowest']
        experimental: [false]


    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: easio_test
          MONGO_INITDB_ROOT_USERNAME: appuser
          MONGO_INITDB_ROOT_PASSWORD: apppassword
      postgres:
        image: postgres:13.3-alpine3.14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'

      timescale:
        image: timescale/timescaledb:latest-pg12
        ports:
          - 5433:5432
        env:
          POSTGRES_DB: 'parthenon_test'
          POSTGRES_USER: 'appuser'
          POSTGRES_PASSWORD: 'apppassword'
      redis:
        image: redis

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql, mongodb
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-


      - name: Install dependencies
        run: |
          composer update ${{ matrix.composer-flags }}

      - name: Code Style
        run: |
          export PHP_CS_FIXER_IGNORE_ENV=1
          vendor/bin/php-cs-fixer fix src --dry-run

      - name: PHPUnit
        run: |
          vendor/bin/phpunit
